// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QlySach_API.Data;

#nullable disable

namespace QlySach_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241030085439_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("QlySach_API.Model.Entity.DanhMuc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("parentDanhMucId")
                        .HasColumnType("int");

                    b.Property<string>("tenDanhMuc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("parentDanhMucId");

                    b.ToTable("DanhMuc");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("nameRole")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            nameRole = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            nameRole = "User"
                        });
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.Sach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("giaTien")
                        .HasColumnType("int");

                    b.Property<int>("soLuong")
                        .HasColumnType("int");

                    b.Property<string>("tenSach")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ListSach");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.SachDanhMuc", b =>
                {
                    b.Property<int>("sachId")
                        .HasColumnType("int");

                    b.Property<int>("danhMucId")
                        .HasColumnType("int");

                    b.HasKey("sachId", "danhMucId");

                    b.HasIndex("danhMucId");

                    b.ToTable("SachDanhMucs");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.TokenRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("jwtToken")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("roleId");

                    b.ToTable("TokenRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            jwtToken = "",
                            roleId = 1
                        },
                        new
                        {
                            Id = 2,
                            jwtToken = "",
                            roleId = 2
                        });
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin",
                            RoleId = 1,
                            userName = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Password = "user",
                            RoleId = 2,
                            userName = "user"
                        });
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.DanhMuc", b =>
                {
                    b.HasOne("QlySach_API.Model.Entity.DanhMuc", "parentDanhMuc")
                        .WithMany("listDanhMucCon")
                        .HasForeignKey("parentDanhMucId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("parentDanhMuc");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.SachDanhMuc", b =>
                {
                    b.HasOne("QlySach_API.Model.Entity.DanhMuc", "DanhMuc")
                        .WithMany("SachDanhMucs")
                        .HasForeignKey("danhMucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QlySach_API.Model.Entity.Sach", "Sach")
                        .WithMany("sachDanhMucs")
                        .HasForeignKey("sachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DanhMuc");

                    b.Navigation("Sach");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.TokenRole", b =>
                {
                    b.HasOne("QlySach_API.Model.Entity.Role", "Role")
                        .WithMany()
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.User", b =>
                {
                    b.HasOne("QlySach_API.Model.Entity.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.DanhMuc", b =>
                {
                    b.Navigation("SachDanhMucs");

                    b.Navigation("listDanhMucCon");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QlySach_API.Model.Entity.Sach", b =>
                {
                    b.Navigation("sachDanhMucs");
                });
#pragma warning restore 612, 618
        }
    }
}
